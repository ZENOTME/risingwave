jobs:
  end-to-end-source:
    name: e2e-test-source
    needs:
      - compute-node-build-dev
    runs-on: ubuntu-latest
    timeout-minutes: 15 # NOTE: Increase this number when we have more tests.
    env:
      PG_PORT: 5432
      RW_PORT: 4567
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Install required components
        run: |
          sudo apt-get update -yy -o Acquire::Retries=3
          sudo apt-get install --upgrade -yy tmux postgresql -o Acquire::Retries=3

      # # For source testing.
      # - name: Setup kafka cluster
      #   run: ./scripts/source/prepare_source.sh

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_TOOLCHAIN }}
          profile: minimal

      - name: Cache Cargo home # cargo-make need this info to accelerate prepare process
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ env.CACHE_KEY_SUFFIX }}-e2e

      - name: Download sqllogictest
        run: |
          wget ${RW_SQLLOGICTEST_URL} -O - | tar xz && mv ${BINARY} ${DIR}/${BINARY}
          chmod +x ${DIR}/${BINARY}
        env:
          DIR: /usr/local/bin
          BINARY: sqllogictest

      - name: Download cargo-make
        run: |
          curl -fL ${RW_CARGO_MAKE_URL} -o ~/cargo-make.zip
          unzip ~/cargo-make.zip -d ~
          mv "${HOME}/${RW_CARGO_MAKE_DIRECTORY}" ~/cargo-make

      - uses: actions/download-artifact@v2
        name: Download risingwave binary
        with:
          name: risingwave-dev
          path: ./target/debug

      - uses: actions/download-artifact@v2
        name: Download playground binary
        with:
          name: risedev-playground-dev
          path: ./target/debug

      - uses: actions/download-artifact@v2
        name: Download risingwave_regress_test binary
        with:
          name: risingwave_regress_test-dev
          path: ./target/debug

      - name: Adjust permission
        run: |
          chmod +x ./target/debug/risingwave
          chmod +x ./target/debug/risedev-playground
          chmod +x ./target/debug/risingwave_regress_test

      - name: Generate RiseDev CI config
        run: |
          cp risedev-components.ci.env risedev-components.user.env

      - name: Prepare RiseDev playground
        run: |
          ~/cargo-make/makers pre-start-playground
          ~/cargo-make/makers link-all-in-one-binaries

      # --- Tests ---
      #
      # Note: If you encounter timeout when running tests without introducing new ones,
      # please double check whether there is performance degradation. Only increase the timeout
      # if the degradation is reasonable or to be fixed soon.

      # When running regress tests, do `FLUSH` implicitly after every insertion.
      # TODO: enable regress test for Rust frontend
      # - name: regress test batch 3-node
      #   timeout-minutes: 1
      #   run: |
      #     ~/cargo-make/makers clean-data
      #     RW_IMPLICIT_FLUSH=1 ~/cargo-make/makers dev ci-3cn-1fe
      #     psql --version
      #     RUST_LOG=info target/debug/risingwave_regress_test -h 127.0.0.1 \
      #       -p ${{ env.RW_PORT }} \
      #       --input `pwd`/src/tests/regress/data \
      #       --output `pwd`/src/tests/regress/output \
      #       --schedule `pwd`/src/tests/regress/data/schedule

      # - name: Kill cluster
      #   run: |
      #     ~/cargo-make/makers k
      #     ~/cargo-make/makers logs
      #     ~/cargo-make/makers check-logs

      - name: e2e test w/ Rust frontend - source with kafka
        timeout-minutes: 2
        run: |
          ~/cargo-make/makers clean-data
          ~/cargo-make/makers ci-start ci-kafka
          ./scripts/source/prepare_ci_kafka.sh
          sqllogictest -p 4566 './e2e_test/source/**/*.slt'

      # --- Post Tasks ---
      - name: Dump last 100 lines of logs on failure
        if: ${{ failure() }}
        run: ~/cargo-make/makers logs

      - uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        name: Upload RiseDev logs on failure (You may find it in artifacts)
        with:
          path: .risingwave/log/
          name: risedev-logs-source
